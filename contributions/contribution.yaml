openapi: 3.0.0
info:
  title: Rokwire Contributions Building Block API
  description: Contributions Building Block API Documentation
  version: 1.12.1
servers:
- url: https://api.rokwire.illinois.edu
  description: Production server
- url: https://api-test.rokwire.illinois.edu
  description: Test server
- url: https://api-dev.rokwire.illinois.edu
  description: Development server
tags:
- name: Contributions
  description: API endpoints for managing Contributions.
- name: Talents
  description: API endpoints for managing Talents.
- name: Capabilities
  description: API endpoints for managing Capabilities.
- name: Admin
  description: Admin endpoints for the Contributions Building Block.
paths:
  /contributions:
    post:
      summary: Create a new Contribution
      tags:
       - Contributions
      security:
        - GitHubAuth: []
      requestBody:
        description: Contribution data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contribution'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the created contribution
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal server error
    get:
      summary: Return existing Contributions based on search criteria
      tags:
       - Contributions
      security:
        - GitHubAuth: []
        - ApiKeyAuth: []
      parameters:
        - name: name
          in: query
          description: Contribution Name
          schema:
            type: string
      responses:
        200:
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contribution'
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal server error
  /contributions/talents:
    get:
      summary: Return existing Talents based on search criteria
      operationId: controllers.contributions.alltalentssearch
      tags:
       - Talents
      security:
        - GitHubAuth: []
        - ApiKeyAuth: []
      parameters:
        - name: name
          in: query
          description: Talent Name
          schema:
            type: string
      responses:
        200:
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Talent'
                    - type: object
                      properties:
                        contributionId:
                          type: string
                          format: uuid
                          description: UUID4 format string identifier of the Contribution that this Talent belongs to.
#                  $ref: '#/components/schemas/Talent'
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal server error+
  /contributions/capabilities:
    get:
      summary: Return existing Capabilities based on search criteria
      operationId: controllers.contributions.allcapabilitiessearch
      tags:
        - Capabilities
      security:
        - GitHubAuth: []
        - ApiKeyAuth: []
      parameters:
        - name: name
          in: query
          description: Capability Name
          schema:
            type: string
      responses:
        200:
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Capability'
                    - type: object
                      properties:
                        contributionId:
                          type: string
                          format: uuid
                          description: UUID4 format string identifier of the Contribution that this Capability belongs to.
#                  $ref: '#/components/schemas/Capability'
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal server error
  /contributions/{id}/talents:
    get:
      summary: Get Talents that belong to a specific Contribution
      tags:
        - Contributions
      security:
        - GitHubAuth: []
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Contribution ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: Talents in this given Contribution
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Talent'
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal server error
  /contributions/{id}/capabilities:
    get:
      summary: Get Capabilities that belong to a specific Contribution
      tags:
        - Contributions
      security:
        - GitHubAuth: []
        - ApiKeyAuth: []
      parameters:
        - name: id
          in: path
          description: Contribution ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: Capabilities in the given Contribution
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Capability'
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal server error
  /contributions/{id}:
    get:
      summary: Get a specific Contribution
      tags:
       - Contributions
      security:
        - GitHubAuth: []
        - ApiKeyAuth: []
      parameters:
      - name: id
        in: path
        description: ID of the contribution that needs to be obtained
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Contribution details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contribution'
        400:
          description: Bad request
        401:
          description: Unauthorized
        404:
          description: Not found
        500:
          description: Internal server error
    put:
      summary: Update a contribution
      tags:
       - Contributions
      security:
        - GitHubAuth: []
      parameters:
      - name: id
        in: path
        description: ID of the contribution that needs to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Contribution object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contribution'
        required: true
      responses:
        200:
          description: Successfully updated contribution details
        401:
          description: Unauthorized
        405:
          description: Invalid input
        500:
          description: Internal error
    delete:
      summary: Delete a contribution
      tags:
       - Contributions
      security:
        - GitHubAuth: []
      parameters:
      - name: id
        in: path
        description: ID of the contribution that needs to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: Successfully deleted contribution details
        401:
          description: Unauthorized
        405:
          description: Invalid input
        500:
          description: Internal error
  /contributions/{id}/talents/{talent_id}:
    get:
      summary: Get Talent that belong to a specific Contribution by id
      tags:
        - Contributions
      security:
        - GitHubAuth: [ ]
        - ApiKeyAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Contribution ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: talent_id
          in: path
          description: Talent ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: Talents in this given Contribution by id
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                  - $ref: '#/components/schemas/Talent'
                  - type: object
                    properties:
                      contributionAdmins:
                        description: List of GitHub usernames of Contribution admins
                        type: array
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal server error
  /contributions/{id}/capabilities/{capability_id}:
    get:
      summary: Get Capability that belong to a specific Contribution by id
      tags:
        - Contributions
      security:
        - GitHubAuth: [ ]
        - ApiKeyAuth: [ ]
      parameters:
        - name: id
          in: path
          description: Contribution ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: capability_id
          in: path
          description: Capability ID
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: Capability by id in this given Contribution
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Capability'
                    - type: object
                      properties:
                        contributionAdmins:
                          description: List of GitHub usernames of Contribution admins
                          type: array
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal server error
  /contributions/ok:
    get:
      summary: Get status check
      tags:
        - Contributions
      responses:
        200:
          description: The building block is alive and responding.
        400:
          description: Bad request
        500:
          description: Internal server error
  /contributions/admin/reviewers:
    post:
      summary: Create a new reviwer
      tags:
        - Admin
      security:
        - GitHubAuth: [ ]
      requestBody:
        description: Reviewer data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reviewer'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the created reviewer
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal server error
    get:
      summary: Return the list of existing reviewers
      tags:
        - Admin
      security:
        - GitHubAuth: [ ]
      responses:
        200:
          description: Reviewers list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reviewer'
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal server error
  /contributions/admin/reviewers/{id}:
    delete:
      summary: Delete a reviewer
      tags:
        - Admin
      security:
        - GitHubAuth: [ ]
      parameters:
        - name: id
          in: path
          description: ID of the reviewer that needs to be deleted
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted contribution details
        401:
          description: Unauthorized
        500:
          description: Internal error
  /contributions/version:
    get:
      summary: Get version of contribution building block
      tags:
        - Contributions
      responses:
        200:
          description: Contributions building block version.
          content:
            text/plain:
              schema:
                type: string
        400:
          description: Bad request
        500:
          description: Internal server error
  /contributions/building-blocks:
    get:
      summary: Get the list of building blocks
      tags:
        - Contributions
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: List of the building blocks
        400:
          description: Bad request
        500:
          description: Internal server error
components:
  schemas:
    Contribution:
      type: object
      description: A logical grouping of one or more Talents and Capabilities that adds a significant feature to the Rokwire platform.
      required:
        - name
        - shortDescription
        - contributionAdmins
        - contacts
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        shortDescription:
          type: string
        longDescription:
          nullable: true
          type: string
        contributors:
          nullable: true
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/Person'
              - $ref: '#/components/schemas/Organization'
        contacts:
          type: array
          items:
            properties:
              name:
                nullable: false
                type: string
              email:
                nullable: false
                type: string
              phone:
                nullable: false
                type: string
              organization:
                nullable: true
                type: string
              officialAddress:
                nullable: true
                type: string
        capabilities:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Capability'
        talents:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/Talent'
        contributionAdmins:
          description: List of GitHub usernames of Contribution admins
          type: array
          items:
            type: string
            minItems: 1
        status:
          type: string
          enum:
            - Submitted
            - Reviewing
            - Approved
            - Disapproved
            - Published
        reviews:
          items:
            $ref: '#/components/schemas/Review'
          nullable: true
          type: array
        dateCreated:
          type: string
          format: date-time
        dateModified:
          type: string
          format: date-time
    Capability:
      type: object
      required:
        - id
        - name
        - description
        - isOpenSource
        - deploymentDetails
        - healthCheckUrl
        - version
        - dataDeletionEndpointDetails
      properties:
        id:
          type: string
          format: uuid
          description: UUID4 format string identifier of the Capability
        name:
          type: string
        description:
          type: string
        isOpenSource:
          type: boolean
        apiDocUrl:
          nullable: true
          type: string
          description: API documentation URL
        sourceRepoUrl:
          nullable: true
          type: string
          description: Source Repository documentation URL
        deploymentDetails:
          type: object
          properties:
            location:
              type: string
              enum:
               - internal
               - external
              description: >
                Deployment location:
                  * `internal` - Within Rokwire Platform
                  * `external` - Outside Rokwire Platform
            dockerImageName:
              description: Docker image name (if available).
              nullable: true
              type: string
            environmentVariables:
              nullable: true
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
            databaseDetails:
              nullable: true
              type: string
            authMethod:
              nullable: true
              type: string
        apiBaseUrl:
          description: API base URL
          nullable: true
          type: string
        version:
          type: string
        versionUrl:
          nullable: true
          type: string
        healthCheckUrl:
          nullable: true
          type: string
        dataDeletionEndpointDetails:
          description: Details of API endpoint to delete user info given the user UUID.
          type: object
          properties:
            deletionEndpoint:
              type: string
              description: Deletion endpoint details. E.g. `DELETE /users/details/{UUID}`
            apiKey:
              type: string
    Talent:
      type: object
      description: A core feature in the app user interface.
      required:
        - id
        - name
        - shortDescription
      properties:
        id:
          type: string
          format: uuid
          description: UUID4 format string identifier of the Talent
        name:
          type: string
        shortDescription:
          type: string
        longDescription:
          type: string
        requiredCapabilities:
          type: array
          items:
            $ref: '#/components/schemas/RequiredCapability'
        requiredBuildingBlocks:
          type: array
          items:
            type: string
            enum:
              - App Config
              - Authentication
              - Events
              - Logging
              - Profile
              - Talent Chooser
              - Transportation
        minUserPrivacyLevel:
          description: Minimum privacy level that needs to be set by the user for this Talent to appear in the app interface.
          type: integer
          minimum: 1
          maximum: 5
        minEndUserRoles:
          description: Minimum set of end user roles that needs to be selected by the user for this Talent to appear in the app interface
          type: array
          items:
            type: string
            enum:
              - alumni
              - employee
              - fan
              - parent
              - student
              - visitor
          uniqueItems: true
        startDate:
          description: Start date at which this Talent can become active.
          type: string
          format: date-time
        endDate:
          description: End date at which this Talent should be deactivated.
          type: string
          format: date-time
        dataDescription:
          description: Detailed description of the data that is collected by this Talent, how it is used, and how this relates to the privacy level.
          type: string
        selfCertification:
          description: Detailed disclosure about some specific items related to the Rokwire platform.
          type: object
          properties:
            dataDeletionUponRequest:
              type: string
              description: Self certification about deleting data upon request
            respectingUserPrivacySetting:
              type: string
              description: Self certification about respecting privacy setting
            discloseAds:
              type: string
              description: Self disclosure about any Ads shown in the Talent
            discloseSponsors:
              type: string
            discloseImageRights:
              type: string
              description: Self disclosure about the rights to use images within the Talent
    RequiredCapability:
      type: object
      description: A required capabiity object that recorded in talent
      required:
        - contributionId
        - capabilityId
        - capabilityName
      properties:
        contributionId:
          type: string
          description: ObjectID formation string identifier of the contribution
        contributionName:
          type: string
          description: Name of the contribution
        capabilityId:
          type: string
          format: uuid
          description: UUID4 format string identifier of the capability
        capabilityName:
          type: string
          description: Name of the capability
    Person:
      type: object
      properties:
        contributorType:
          type: string
        firstName:
          nullable: true
          type: string
        middleName:
          nullable: true
          type: string
        lastName:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        affiliation:
          nullable: true
          type: object
          allOf:
           - $ref: '#/components/schemas/Organization'
    Organization:
      type: object
      properties:
        contributorType:
          type: string
        name:
          nullable: true
          type: string
        address:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
    Reviewer:
      type: object
      description: reviewer for reviewing uploaded contributions
      required:
        - name
        - githubUsername
        - email
      properties:
        name:
          type: string
        githubUsername:
          type: string
        email:
          type: string
          format: email
          pattern: "^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$"
    Review:
      description: A review from a reviewer.
      properties:
        reviewerId:
          description: Reviewer's ID.
          type: string
          format: uuid
        comment:
          type: string
        lastUpdated:
          format: date-time
          type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: ROKWIRE-API-KEY
      x-apikeyInfoFunc: auth_middleware.verify_apikey
      description: Each client version has unique API key (e.g., "c6befa22-50a6-4403-a8fc-378c9719743b"). For API endpoints that do not require user authentication, the ROKWIRE-API-KEY header must contain an API key corresponding to a supported client.
    GitHubAuth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://github.com/login/oauth/authorize
          tokenUrl: https://github.com/login/oauth/access_token
          scopes: {}
      x-tokenInfoUrl: https://api.github.com/user
      description: The client must send a unexpired GitHub OAuth2 access_token in the Authorization header when making requests to API endpoints that require GitHub authentication.
