openapi: 3.0.0
info:
  title: Rokwire Profile Building Block API
  description: Profile Building Block API Documentation
  version: 1.9.0
servers:
- url: https://api.rokwire.illinois.edu
  description: Production server
- url: https://api-test.rokwire.illinois.edu
  description: Test server
- url: https://api-dev.rokwire.illinois.edu
  description: Development server
tags:
- name: Profile
  description: API endpoints for managing non-PII user profile.
- name: PII
  description: API endpoints for managing PII user profile.
paths:
  /profiles:
    post:
      tags:
      - Profile
      summary: Create profile
      description: |
        Create non-PII profile with profile id.

        Auth: Requires a valid API Key for access.
      security:
        - ApiKeyAuth: []
      requestBody:
        description: Created profile object
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/Non-pii'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Non-pii'
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal error
  /profiles/device-data:
    get:
      tags:
        - Profile
      summary: Get device token data from Non-PII profile
      description: |
        By passing in the appropriate options, you can search for Profile matching your criteria in the system
        Auth: Requires a valid API Key for access.
      security:
        - ApiKeyAuth: []
      parameters:
        - name: favorites.eventId
          in: query
          description: The parameter for searching Non PII device data based on user's favorite Event's ID
          required: false
          style: form
          explode: true
          schema:
            type: string
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NonPIIDeviceData'
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal error
  /profiles/{uuid}:
    get:
      tags:
      - Profile
      summary: Find profile by ID
      description: |
        Returns a single profile

        Auth: Requires a valid API Key and profile uuid for access.
      security:
        - ApiKeyAuth: []
      parameters:
      - name: uuid
        in: path
        description: ID of profile to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Non-pii'
            application/xml:
              schema:
                $ref: '#/components/schemas/Non-pii'
        400:
          description: Invalid ID supplied
        401:
          description: Unauthorized
        404:
          description: Profile not found
        500:
          description: Internal error
    put:
      tags:
      - Profile
      summary: Updates a profile with form data
      description: |
        Auth: Requires a valid API Key and profile uuid for access.
      security:
        - ApiKeyAuth: []
      parameters:
      - name: uuid
        in: path
        description: ID of profile that needs to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: update profile object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Non-pii'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Non-pii'
            application/xml:
              schema:
                $ref: '#/components/schemas/Non-pii'
        400:
          description: Invalid ID supplied
        401:
          description: Unauthorized
        405:
          description: Invalid input
        500:
          description: Internal error
    delete:
      tags:
      - Profile
      summary: Deletes a profile
      description: |
        Auth: Requires a valid API Key and profile uuid for access.
      security:
        - ApiKeyAuth: []
      parameters:
      - name: uuid
        in: path
        description: Profile id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        202:
          description: Profile is deleted
        400:
          description: Invalid ID supplied
        401:
          description: Unauthorized
        404:
          description: Profile not found
        500:
          description: Internal error
  /profiles/pii:
    post:
      tags:
      - PII
      summary: Create PII entry
      description: |
        This creates a new PII entry.
        User's UUID must be provided as a string or as a list of string.

        Auth: Requires a valid id_token for access. The UIN / phone number in the PII entry is populated from the id_token contents. Remaining data is obtained from the request body.
      security:
        - UserAuth: []
      requestBody:
        description: PII profile data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pii'
            examples:
              UUID list:
                value:
                  uuid: ["3fa85f64-5717-4562-b3fc-2c963f66afa6"]
              UUID string:
                value:
                  uuid: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
              UUID string with more request body:
                value:
                  uuid: "3fa85f64-5717-4562-b3fc-2c963f66afa6"
                  address: 79137 Kristina Lights
                  birthYear: 1999
                  country: USA
                  email: Janie.Daniel33@hotmail.com
                  firstname: Ben
                  healthcareProviderIDs:
                    - 5ca68256-6a9a-4cfe-9246-3ddd5ee9580a
                    - aa6897cf-2c31-41a1-be2c-52ebaf4d50f5
                    - aeb55bab-ebe3-4066-9f1a-323502a58c12
                  homeCounty: Josianeburgh
                  lastname: Barrows
                  middlename: Levin
                  phone: +17972114377
                  photoImageBase64: null
                  state: Illinois
                  testResultsConsent:
                    consentProvided: true
                  workCounty: Donnieberg
                  zipCode: "61801"
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pii'
              examples:
                UUID string with more request body:
                  value:
                    address: 79137 Kristina Lights
                    birthYear: 1999
                    country: USA
                    creationDate: "2020-05-05T04:44:45.943Z"
                    email: Janie.Daniel33@hotmail.com
                    firstname: Ben
                    healthcareProviderIDs:
                      - 5ca68256-6a9a-4cfe-9246-3ddd5ee9580a
                      - aa6897cf-2c31-41a1-be2c-52ebaf4d50f5
                      - aeb55bab-ebe3-4066-9f1a-323502a58c12
                    homeCounty: Josianeburgh
                    imageUrl: null
                    lastModifiedDate: "2020-05-05T04:44:45.943Z"
                    lastname: Barrows
                    middlename: Levin
                    netid: null
                    phone: +17972114377
                    photoImageBase64: null
                    pid: c84bfd99-e40d-43d5-854f-33859de593d5
                    state: Illinois
                    testResultsConsent:
                      consentProvided: true
                      dateModified: "2020-05-05T04:44:45.943Z"
                    uin: "100000001"
                    username: null
                    uuid:
                      - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                    workCounty: Donnieberg
                    zipCode: "61801"
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal error
  /profiles/pii/{pid}:
    get:
      tags:
      - PII
      summary: Get PII by PID
      description: |
        Returns a single PII entry.

        Auth: Requires a valid id_token and PID for access. The contents of the id_token (phone number, uin) must match the PII entry contents.
      security:
        - UserAuth: []
      parameters:
      - name: pid
        in: path
        description: ID of PII to return
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pii'
            application/xml:
              schema:
                $ref: '#/components/schemas/Pii'
        400:
          description: Invalid ID supplied
        401:
          description: Unauthorized
        404:
          description: Profile not found
        500:
          description: Internal error
    put:
      tags:
      - PII
      summary: Updates a PII with form data
      description: |
        Auth: Requires a valid id_token and PID For access. The contents of the id_token (phone number, uin) must match the old and new PII entry contents (i.e., phone number and uin can't be changed).
      security:
        - UserAuth: []
      parameters:
      - name: pid
        in: path
        description: ID of PII that needs to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: update profile object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pii'
            example:
              address: 2000 Kristina Lights
              birthYear: 1999
              country: USA
              creationDate: "2020-05-05T04:44:45.943Z"
              email: Alice.Bob@hotmail.com
              firstname: Ben
              healthcareProviderIDs:
                - 5ca68256-6a9a-4cfe-9246-3ddd5ee9580a
                - aa6897cf-2c31-41a1-be2c-52ebaf4d50f5
              homeCounty: Josianeburgh
              imageUrl: null
              lastModifiedDate: "2020-05-05T04:44:45.943Z"
              lastname: Barrows
              middlename: Levin
              netid: null
              phone: "+17972114377"
              photoImageBase64: null
              pid: c84bfd99-e40d-43d5-854f-33859de593d5
              state: Illinois
              testResultsConsent:
                consentProvided: false
                dateModified: "2020-05-05T04:44:45.943Z"
              uin: "100000001"
              username: null
              uuid:
                - 3fa85f64-5717-4562-b3fc-2c963f66afa6
              workCounty: Donnieberg
              zipCode: "61821"
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pii'
              example:
                address: 2000 Kristina Lights
                birthYear: 1999
                country: USA
                creationDate: 2020-05-05T04:44:45.943Z
                email: Alice.Bob@hotmail.com
                firstname: Ben
                healthcareProviderIDs:
                  - 5ca68256-6a9a-4cfe-9246-3ddd5ee9580a
                  - aa6897cf-2c31-41a1-be2c-52ebaf4d50f5
                homeCounty: Josianeburgh
                imageUrl: null
                lastModifiedDate: "2020-05-05T04:44:45.943Z"
                lastname: Barrows
                middlename: Levin
                netid: null
                phone: "+17972114377"
                photoImageBase64: null
                pid: c84bfd99-e40d-43d5-854f-33859de593d5
                state: Illinois
                testResultsConsent:
                  consentProvided: false
                  dateModified: "2020-05-05T04:44:45.943Z"
                uin: "100000001"
                username: null
                uuid:
                  - 3fa85f64-5717-4562-b3fc-2c963f66afa6
                workCounty: Donnieberg
                zipCode: "61821"
            application/xml:
              schema:
                $ref: '#/components/schemas/Pii'
        400:
          description: Invalid ID supplied
        401:
          description: Unauthorized
        405:
          description: Invalid input
        500:
          description: Internal error
    delete:
      tags:
      - PII
      summary: Deletes a PII
      description: |
        Auth: Requires a valid id_token and PID For access. The contents of the id_token (phone number, uin) must match the contents of the PII entry to be deleted.
      security:
        - UserAuth: []
      parameters:
      - name: pid
        in: path
        description: Pii id to delete
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        202:
          description: Profile is deleted
        400:
          description: Invalid ID supplied
        401:
          description: Unauthorized
        404:
          description: Profile not found
        500:
          description: Internal error
components:
  schemas:
    Non-pii:
      type: object
      nullable: true
      properties:
        uuid:
          type: string
          format: uuid
        over13:
          nullable: true
          type: boolean
        interests:
          type: array
          items:
            properties:
              category:
                type: string
              subcategories:
                type: array
                items:
                 type: string
        positiveInterestTags:
          nullable: true
          type: array
          items:
            type: string
        negativeInterestTags:
          nullable: true
          type: array
          items:
            type: string
        favorites:
          nullable: true
          type: object
          items:
            properties:
              eventIds:
                type: array
                items:
                  type: string
              placeIds:
                type: array
                items:
                  type: string
              diningPlaceIds:
                type: array
                items:
                  type: string
              laundryPlaceIds:
                type: array
                items:
                  type: string
              athleticEventIds:
                type: array
                items:
                  type: string
        privacySettings:
          nullable: true
          type: object
          properties:
            level:
              type: integer
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
            dataModified:
              type: string
        creationDate:
          type: string
        lastModifiedDate:
          type: string
    Pii:
      type: object
      properties:
        pid:
          type: string
        uuid:
          oneOf:
            - type: string
              format: uuid
            - type: array
              items:
                type: string
                format: uuid
        userName:
          nullable: true
          type: string
        firstname:
          nullable: true
          type: string
        lastname:
          nullable: true
          type: string
        middlename:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        birthYear:
          nullable: true
          type: integer
          format: int8
        address:
          nullable: true
          type: string
        zipCode:
           nullable: true
           type: string
        homeCounty:
          nullable: true
          type: string
        workCounty:
          nullable: true
          type: string
        state:
          nullable: true
          type: string
        country:
          nullable: true
          type: string
        healthcareProviderIDs:
          nullable: true
          type: array
          items:
            type: string
        testResultsConsent:
          type: object
          nullable: true
          properties:
            consentProvided :
              type: boolean
            dateModified:
              type: string
        photoImageBase64:
          nullable: true
          type: string
          format: byte
        imageUrl:
          nullable: true
          type: string
        creationDate:
          description: creation date will not be modified once it get set.
          type: string
        lastModifiedDate:
          description: last modified date will be updated in the endpoint not from the input request.
          type: string
    NonPIIDeviceData:
      type: object
      nullable: true
      properties:
        deviceToken:
          type: string
        uuid:
          type: string
          format: uuid
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: ROKWIRE-API-KEY
      x-apikeyInfoFunc: auth_middleware.verify_apikey
      description: Each client version has unique API key (e.g., "c6befa22-50a6-4403-a8fc-378c9719743b"). For API endpoints that do not require user authentication, the ROKWIRE-API-KEY header must contain an API key corresponding to a supported client.
    UserAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # https://openid.net/specs/openid-connect-core-1_0.html [id_token]
      x-bearerInfoFunc: auth_middleware.verify_userauth
      description: The client must send a valid (i.e., signed, not expired) OpenID Connect id_token in the Authorization header when making requests to API endpoints that require user authentication.
